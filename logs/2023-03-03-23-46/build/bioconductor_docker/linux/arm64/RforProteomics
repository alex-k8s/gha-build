+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''RforProteomics'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'?repositories' for details

replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/latest

Bioconductor version 3.16 (BiocManager 1.30.19), R 4.2.2 (2022-10-31)
Installing package(s) 'RforProteomics'
also installing the dependencies ‘R.oo’, ‘R.methodsS3’, ‘R.utils’

trying URL 'https://packagemanager.posit.co/cran/latest/src/contrib/R.oo_1.25.0.tar.gz'
Content type 'binary/octet-stream' length 383263 bytes (374 KB)
==================================================
downloaded 374 KB

trying URL 'https://packagemanager.posit.co/cran/latest/src/contrib/R.methodsS3_1.8.2.tar.gz'
Content type 'binary/octet-stream' length 24315 bytes (23 KB)
==================================================
downloaded 23 KB

trying URL 'https://packagemanager.posit.co/cran/latest/src/contrib/R.utils_2.12.2.tar.gz'
Content type 'binary/octet-stream' length 365152 bytes (356 KB)
==================================================
downloaded 356 KB

trying URL 'https://bioconductor.org/packages/3.16/data/experiment/src/contrib/RforProteomics_1.35.1.tar.gz'
Content type 'application/x-gzip' length 7248109 bytes (6.9 MB)
==================================================
downloaded 6.9 MB

* installing *source* package ‘R.methodsS3’ ...
** package ‘R.methodsS3’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘R.methodsS3’ as ‘R.methodsS3_1.8.2_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (R.methodsS3)
* installing *source* package ‘R.oo’ ...
** package ‘R.oo’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
Warning in setGenericS3.default(name, export = exportGeneric, envir = envir,  :
  Renamed the preexisting function getMethods to getMethods.default, which was defined in environment R.oo.
Warning in setGenericS3.default(name, export = exportGeneric, envir = envir,  :
  Renamed the preexisting function getClasses to getClasses.default, which was defined in environment R.oo.
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘R.oo’ as ‘R.oo_1.25.0_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (R.oo)
* installing *source* package ‘R.utils’ ...
** package ‘R.utils’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
Warning in setGenericS3.default(name, export = exportGeneric, envir = envir,  :
  Renamed the preexisting function warnings to warnings.default, which was defined in environment R.utils.
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘R.utils’ as ‘R.utils_2.12.2_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (R.utils)
* installing *source* package ‘RforProteomics’ ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
Warning: replacing previous import ‘MSnbase::plot’ by ‘graphics::plot’ when loading ‘RforProteomics’
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
Warning: replacing previous import ‘MSnbase::plot’ by ‘graphics::plot’ when loading ‘RforProteomics’
** testing if installed package can be loaded from final location
Warning: replacing previous import ‘MSnbase::plot’ by ‘graphics::plot’ when loading ‘RforProteomics’
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘RforProteomics’ as ‘RforProteomics_1.35.1_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (RforProteomics)

The downloaded source packages are in
	‘/tmp/RtmpwY4q5q/downloaded_packages’
Old packages: 'BiocManager', 'cachem', 'fastmap', 'fs', 'gh', 'httpuv', 'httr',
  'sourcetools', 'tinytex', 'utf8', 'xfun', 'codetools', 'mgcv', 'nlme',
  'survival'

real	4m56.277s
user	4m47.739s
sys	0m3.948s
* installing *source* package ‘readBrukerFlexData’ ...
** package ‘readBrukerFlexData’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘readBrukerFlexData’ as ‘readBrukerFlexData_1.9.0_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (readBrukerFlexData)
* installing *source* package ‘readMzXmlData’ ...
** package ‘readMzXmlData’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘readMzXmlData’ as ‘readMzXmlData_2.8.2_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (readMzXmlData)
* installing *source* package ‘MALDIquantForeign’ ...
** package ‘MALDIquantForeign’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘MALDIquantForeign’ as ‘MALDIquantForeign_0.13_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (MALDIquantForeign)
* installing *source* package ‘readBrukerFlexData’ ...
** package ‘readBrukerFlexData’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘readBrukerFlexData’ as ‘readBrukerFlexData_1.9.0_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (readBrukerFlexData)
* installing *source* package ‘readMzXmlData’ ...
** package ‘readMzXmlData’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘readMzXmlData’ as ‘readMzXmlData_2.8.2_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (readMzXmlData)
